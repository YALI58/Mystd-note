# 03_bit_operator.py
# 2025/1/18   19:10


# ~按位取反
# 规则: 对数据补码的每个二进制位取反,即1变为0, 0变为1
# 2=> 0000 0010
# ~2=> 补码:1111 1101 => 反码:1111 1100  原码: 1000 0011=>-3
print(~2)  # -3

# &按位与
# 规则:  参与运算的两个值 ,吗如果两个相应位都为 1 ,则该位的结果为 1 否则为 0
# 2&3=>0000 0010=>2
# 2的补码=>0000 0010
# 3的补码=>0000 0011
print(2 & 3)  # 2

# ^按位异或
# 规则:  参与运算的两个值 ,吗如果两个相应位相异,结果为一
# 2^3=>0000 0001=>1
# 2的补码=>0000 0010
# 3的补码=>0000 0011
print(2 ^ 3)  # 1

# -3=>1000 0011=>1111 1100=>1111 1101
#                                                               0000 0010
# =>1111 1111=> 1111 1110 =>1000 0001
print(2 ^ -3)  # -1

#  | 按位或
# 规则:  参与运算的两个值的补码,如果两个相应位只要有一个为1 ,则该位的结果为 1 否则为 0
# 2|3
# 2 0000 0010
# 3 0000 0011
# 2|3 0000 0011=>3
print(2 | 3)  # 3 